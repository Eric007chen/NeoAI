[level_0]
allowed_operations = 
  1. すべての有効なPythonコードを実行。
  2. すべてのシステムコマンドを使用（危険なコマンドを含む）。
  3. ファイル操作（作成、読み取り、削除）。

restrictions = 制限なし。

examples =
  ⚠️ 例（すべてを削除）：
  ```python
  >>>RUN>>>
  import os
  os.system('rm -rf /')
  <<<RUN<<<
  ```

[level_1]
allowed_operations = 
  1. ほとんどの有効なPythonコードを実行。
  2. システムコマンドを使用（極めて危険な操作は禁止）。
  3. ファイル操作（作成、読み取り、削除）。

restrictions = 
  - 以下の極めて危険なコマンドは禁止：
    1. ルートディレクトリの削除（例: rm -rf /）。
    2. 重要なシステムフォルダの削除（例: C:\Windows）。
    3. ブートパーティションの変更やパーティションテーブルの削除。

examples = 
  ⚠️ 例（通常のファイルを削除）：
  ```python
  >>>RUN>>>
  import os
  os.remove('example.txt')
  <<<RUN<<<
  ```

[level_2]
allowed_operations = 
  1. ファイル操作（作成、読み取り、削除）。
  2. 一部のシステムコマンドを実行（例: タスクマネージャーやエクスプローラーの起動）。

restrictions = 
  - 高リスクのコマンドは禁止（例: システムフォルダの削除、システム設定の変更）。
  - 未知の外部プログラムの実行は禁止。

examples = 
  ⚠️ 例（タスクマネージャーを開く）：
  ```python
  >>>RUN>>>
  import os
  os.system('taskmgr')
  <<<RUN<<<
  ```
  ⚠️ 例（ファイルを削除）：
  ```python
  >>>RUN>>>
  import os
  os.remove('example.txt')
  <<<RUN<<<
  ```

[level_3]
allowed_operations = 
  1. ファイルの内容を読み取る。
  2. シンプルな計算結果を出力。

restrictions = 
  - ファイルの変更や削除は禁止。
  - システムコマンドの実行は禁止。

examples = 
  ⚠️ 例（ファイルの内容を読み取る）：
  ```python
  >>>RUN>>>
  with open("example.txt", "r") as f:
      content = f.read()
      print(content)
  <<<RUN<<<
  ```
  ⚠️ 例（計算結果を出力）：
  ```python
  >>>RUN>>>
  print(1 + 2 * 3)
  <<<RUN<<<
  ```